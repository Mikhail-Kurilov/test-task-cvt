{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\vs_studio\\\\test-task-cvt\\\\src\\\\components\\\\Authorization\\\\Authorization.js\";\nimport React from 'react';\nimport './Authorization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Authorization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authorizationToggle = props.authorizationToggle;\n    this.authorizationResult = props.authorizationResult;\n  }\n\n  login() {\n    const password = document.getElementById('password').value;\n    const login = document.getElementById('login').value;\n\n    if (login.length >= 3 && login.length <= 20 && password.length >= 3 && password.length <= 20) {\n      this.authorizationResult(true);\n    } else {\n      this.authorizationResult(false);\n    }\n  }\n\n  checkMarkHandler() {\n    document.getElementById('checkMark').innerHTML.setAttribute('', 'checked');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorizationOff\",\n        onClick: () => this.authorizationToggle(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"authorization\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"enterWord\",\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"authorizationContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"checkMark\",\n            onClick: () => this.checkMarkHandler()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rememberWord\",\n            children: \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonAuth\",\n          onClick: () => this.login(),\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Authorization;","map":{"version":3,"sources":["D:/test/vs_studio/test-task-cvt/src/components/Authorization/Authorization.js"],"names":["React","Authorization","Component","constructor","props","authorizationToggle","authorizationResult","login","password","document","getElementById","value","length","checkMarkHandler","innerHTML","setAttribute","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,qBAAP;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,mBAAL,GAA2BD,KAAK,CAACC,mBAAjC;AACA,SAAKC,mBAAL,GAA2BF,KAAK,CAACE,mBAAjC;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAArD;AACA,UAAMJ,KAAK,GAAGE,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAA/C;;AAEA,QAAIJ,KAAK,CAACK,MAAN,IAAe,CAAf,IAAoBL,KAAK,CAACK,MAAN,IAAe,EAAnC,IAAyCJ,QAAQ,CAACI,MAAT,IAAkB,CAA3D,IAAgEJ,QAAQ,CAACI,MAAT,IAAkB,EAAtF,EAA0F;AACtF,WAAKN,mBAAL,CAAyB,IAAzB;AACH,KAFD,MAEO;AACH,WAAKA,mBAAL,CAAyB,KAAzB;AACH;AACJ;;AAEDO,EAAAA,gBAAgB,GAAG;AACfJ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,SAArC,CAA+CC,YAA/C,CAA4D,EAA5D,EAAgE,SAAhE;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,OAAO,EAAE,MAAM,KAAKX,mBAAL,CAAyB,KAAzB;AAAjD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,WAAV;AAAsB,YAAA,OAAO,EAAE,MAAM,KAAKQ,gBAAL;AAArC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AA3CuC;;AA8C5C,eAAeN,aAAf","sourcesContent":["import React from 'react';\r\n\r\nimport './Authorization.css';\r\n\r\nclass Authorization extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.authorizationToggle = props.authorizationToggle;\r\n        this.authorizationResult = props.authorizationResult;\r\n    }\r\n\r\n    login() {\r\n        const password = document.getElementById('password').value;\r\n        const login = document.getElementById('login').value;\r\n        \r\n        if (login.length >=3 && login.length <=20 && password.length >=3 && password.length <=20) {\r\n            this.authorizationResult(true);\r\n        } else {\r\n            this.authorizationResult(false);\r\n        }\r\n    }\r\n\r\n    checkMarkHandler() {\r\n        document.getElementById('checkMark').innerHTML.setAttribute('', 'checked');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"authorizationOff\" onClick={() => this.authorizationToggle(false)}>\r\n                </div>\r\n                <form className=\"authorization\">\r\n                    <p className=\"enterWord\">Вход</p>\r\n                    <span className=\"authorizationContainer\">\r\n                        <input id=\"login\"></input> \r\n                        <input id=\"password\"></input>\r\n                    </span>\r\n                    <span className=\"checkBox\">\r\n                        <input id=\"checkMark\" onClick={() => this.checkMarkHandler()}></input>\r\n                        <p className=\"rememberWord\">Запомнить</p>\r\n                    </span>\r\n                    <button className=\"buttonAuth\" onClick={() => this.login()}>Войти</button>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authorization;"]},"metadata":{},"sourceType":"module"}