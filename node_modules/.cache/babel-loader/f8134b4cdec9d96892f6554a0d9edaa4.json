{"ast":null,"code":"class GameDrPill {\n  constructor({\n    id,\n    callbacks\n  }) {\n    this.canvas = document.getElementById(id);\n    this.context = this.canvas.getContext('2d');\n    this.canvas.width = 560;\n    this.canvas.height = 560;\n    this.canvas.addEventListener('click', event => this.clickCell(event));\n    this.ADD_PILLS = 10;\n    this.FIELD_SIZE = 8;\n    this.ROUND_TIME = 60; // sec\n\n    this.SIZE = 70;\n    this.callbacks = callbacks;\n    this.field = [];\n    this.sec = 0;\n    this.interval = null;\n    this.currentPills = 0;\n    this.requirePills = 20;\n    this.vaccineScore = 0;\n    this.firstStep = true;\n    this.x = -1;\n    this.y = -1;\n    this.booms = [];\n    this.boomImages = [];\n    this.boomImages.push(new Image());\n    this.boomImages[0].src = '/img/1.png';\n    this.boomImages.push(new Image());\n    this.boomImages[1].src = '/img/2.png';\n    this.boomImages.push(new Image());\n    this.boomImages[2].src = '/img/3.png';\n    this.boomImages.push(new Image());\n    this.boomImages[3].src = '/img/4.png';\n    this.boomImages.push(new Image());\n    this.boomImages[4].src = '/img/5.png';\n    this.boomImages.push(new Image());\n    this.boomImages[5].src = '/img/6.png';\n    this.boomImages.push(new Image());\n    this.boomImages[6].src = '/img/7.png';\n    this.boomImages.push(new Image());\n    this.boomImages[7].src = '/img/8.png';\n    this.boomImages.push(new Image());\n    this.boomImages[8].src = '/img/9.png';\n    this.boomImages.push(new Image());\n    this.boomImages[9].src = '/img/10.png';\n    this.boomImages.push(new Image());\n    this.boomImages[10].src = '/img/11.png';\n    this.pills = [null];\n    this.pills.push(new Image());\n    this.pills[1].src = '/img/pill_1.png';\n\n    this.pills[1].onload = () => {\n      this.pills.push(new Image());\n      this.pills[2].src = '/img/pill_2.png';\n\n      this.pills[2].onload = () => {\n        this.pills.push(new Image());\n        this.pills[3].src = '/img/pill_5.png';\n\n        this.pills[3].onload = () => {\n          this.pills.push(new Image());\n          this.pills[4].src = '/img/pill_8.png';\n\n          this.pills[4].onload = () => {\n            this.pills.push(new Image());\n            this.pills[5].src = '/img/pill_10.png';\n\n            this.pills[5].onload = () => this.render();\n          };\n        };\n      };\n    };\n\n    for (let i = 0; i < this.FIELD_SIZE; i++) {\n      this.field.push([]);\n\n      for (let j = 0; j < this.FIELD_SIZE; j++) {\n        this.field[i][j] = 1 + Math.floor(Math.random() * 5);\n      }\n    }\n  }\n\n  startTimeUpdate() {\n    if (this.interval) {\n      this.sec = 0;\n      clearInterval(this.interval);\n    }\n\n    this.interval = setInterval(() => {\n      this.sec++;\n\n      if (this.sec >= this.ROUND_TIME) {\n        // закончить игру\n        clearInterval(this.interval);\n        this.callbacks.endGame(this.vaccineScore);\n        return;\n      }\n\n      this.callbacks.timeTick(this.ROUND_TIME - this.sec);\n    }, 1000);\n  }\n\n  move(i1, j1, i2, j2) {\n    if (i1 === i2 && Math.abs(j1 - j2) === 1 || Math.abs(i1 - i2) === 1 && j1 === j2) {\n      let c = this.field[i1][j1];\n      this.field[i1][j1] = this.field[i2][j2];\n      this.field[i2][j2] = c;\n\n      if (this.firstStep) {\n        // старт счетчика времени\n        this.firstStep = false;\n        this.startTimeUpdate();\n      }\n\n      this.render();\n      this.getStatus();\n      return true;\n    }\n\n    return false;\n  }\n\n  clickCell(event) {\n    if (this.x >= 0 && this.y >= 0) {\n      let x = Math.floor(event.offsetX / this.SIZE);\n      let y = Math.floor(event.offsetY / this.SIZE);\n      this.move(this.x, this.y, x, y);\n      this.x = -1;\n      this.y = -1;\n    } else {\n      this.x = Math.floor(event.offsetX / this.SIZE);\n      this.y = Math.floor(event.offsetY / this.SIZE);\n    }\n  }\n\n  dropOneCell(i, j) {\n    if (j === 0) {\n      this.field[i][j] = 1 + Math.floor(Math.random() * 5);\n    } else {\n      for (let k = j; k >= 0; k--) {\n        if (this.field[i][k - 1] !== undefined) {\n          this.field[i][k] = this.field[i][k - 1];\n          this.field[i][k - 1] = 0;\n        } else {\n          this.field[i][k] = 1 + Math.floor(Math.random() * 5);\n        }\n      }\n    }\n  }\n\n  dropElements() {\n    for (let j = 0; j < this.FIELD_SIZE; j++) {\n      for (let i = 0; i < this.FIELD_SIZE; i++) {\n        if (this.field[i][j] === 0) {\n          this.dropOneCell(i, j);\n          this.render();\n        }\n      }\n    }\n  }\n\n  getStatus() {\n    let a1 = 0;\n    let a2 = 0;\n\n    for (let i = 0; i < this.FIELD_SIZE; i++) {\n      a1 = 0;\n      a2 = 0;\n\n      for (let j = 0; j < this.FIELD_SIZE; j++) {\n        if (a1 === a2 && a2 === this.field[i][j]) {\n          this.field[i][j] = 0;\n          this.field[i][j - 1] = 0;\n          this.field[i][j - 2] = 0;\n          this.booms.push({\n            i,\n            j,\n            currentImage: -1\n          });\n          this.booms.push({\n            i,\n            j: j - 1,\n            currentImage: -1\n          });\n          this.booms.push({\n            i,\n            j: j - 2,\n            currentImage: -1\n          });\n          setTimeout(() => this.dropElements(), 1500);\n          this.render();\n          this.callbacks.addPills(3);\n        } else if (a1 === a2 && a2 !== this.field[i][j]) {\n          a1 = this.field[i][j];\n          a2 = 0;\n        } else if (a1 === this.field[i][j]) {\n          a2 = this.field[i][j];\n        } else {\n          a1 = this.field[i][j];\n        }\n      }\n    } // пробежаться по строкам\n\n\n    for (let j = 0; j < this.FIELD_SIZE; j++) {\n      a1 = 0;\n      a2 = 0;\n\n      for (let i = 0; i < this.FIELD_SIZE; i++) {\n        console.log(a1, a2, this.field[i][j]);\n\n        if (a1 === a2 && a2 === this.field[i][j]) {\n          this.field[i][j] = 0;\n          this.field[i - 1][j] = 0;\n          this.field[i - 2][j] = 0;\n          this.booms.push({\n            i,\n            j,\n            currentImage: -1\n          });\n          this.booms.push({\n            i: i - 1,\n            j,\n            currentImage: -1\n          });\n          this.booms.push({\n            i: i - 2,\n            j,\n            currentImage: -1\n          });\n          setTimeout(() => this.dropElements(), 1500);\n          this.render();\n          this.callbacks.addPills(3);\n        } else if (a1 === a2 && a2 !== this.field[i][j]) {\n          a1 = this.field[i][j];\n          a2 = 0;\n        } else if (a1 === this.field[i][j]) {\n          a2 = this.field[i][j];\n        } else {\n          a1 = this.field[i][j];\n        }\n      }\n    }\n  }\n\n  restartTime() {\n    this.startTimeUpdate();\n  }\n\n  isGameOver() {}\n\n  removeLines() {}\n\n  getNewLevel() {\n    /*this.count = 0;\r\n    if (this.pills >= 20) {\r\n       this.count += 1;\r\n    }\r\n    this.pills += 10;*/\n  }\n\n  clear() {\n    this.context.fillStyle = 'purple';\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  render() {\n    this.clear(); // очистка\n    // нарисовать пилюльки\n\n    for (let i = 0; i < this.field.length; i++) {\n      for (let j = 0; j < this.field.length; j++) {\n        if (this.field[i][j]) {\n          this.context.drawImage(this.pills[this.field[i][j]], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\n        } else {\n          this.context.fillRect(i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\n        }\n      }\n    } // нарисовать бумсы\n\n\n    let refresh = false;\n\n    for (let i = this.booms.length - 1; i >= 0; i--) {\n      const boom = this.booms[i];\n\n      if (boom) {\n        boom.currentImage++;\n\n        if (boom.currentImage >= this.boomImages.length) {\n          this.booms.splice(i, 1);\n        } else {\n          const i = boom.i;\n          const j = boom.j;\n          this.context.drawImage(this.boomImages[boom.currentImage], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\n          refresh = true;\n        }\n      }\n    }\n\n    if (refresh) {\n      setTimeout(() => this.render(), 125);\n    }\n  }\n\n}\n\nexport default GameDrPill;","map":{"version":3,"sources":["D:/test/vs_studio/dr-pill/src/components/Game/GameDrPill.js"],"names":["GameDrPill","constructor","id","callbacks","canvas","document","getElementById","context","getContext","width","height","addEventListener","event","clickCell","ADD_PILLS","FIELD_SIZE","ROUND_TIME","SIZE","field","sec","interval","currentPills","requirePills","vaccineScore","firstStep","x","y","booms","boomImages","push","Image","src","pills","onload","render","i","j","Math","floor","random","startTimeUpdate","clearInterval","setInterval","endGame","timeTick","move","i1","j1","i2","j2","abs","c","getStatus","offsetX","offsetY","dropOneCell","k","undefined","dropElements","a1","a2","currentImage","setTimeout","addPills","console","log","restartTime","isGameOver","removeLines","getNewLevel","clear","fillStyle","fillRect","length","drawImage","refresh","boom","splice"],"mappings":"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","sourcesContent":["class GameDrPill {\r\n    constructor({ id, callbacks }) {\r\n        this.canvas = document.getElementById(id);\r\n        this.context = this.canvas.getContext('2d');\r\n        this.canvas.width = 560;\r\n        this.canvas.height = 560;\r\n        this.canvas.addEventListener('click', (event) => this.clickCell(event));\r\n\r\n        this.ADD_PILLS = 10;\r\n        this.FIELD_SIZE = 8;\r\n        this.ROUND_TIME = 60; // sec\r\n        this.SIZE = 70;\r\n\r\n        this.callbacks = callbacks;\r\n\r\n        this.field = [];\r\n        this.sec = 0;\r\n        this.interval = null;\r\n        this.currentPills = 0;\r\n        this.requirePills = 20;\r\n        this.vaccineScore = 0;\r\n        this.firstStep = true;\r\n        this.x = -1;\r\n        this.y = -1;\r\n\r\n        this.booms = [];\r\n        this.boomImages = [];\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[0].src = '/img/1.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[1].src = '/img/2.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[2].src = '/img/3.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[3].src = '/img/4.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[4].src = '/img/5.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[5].src = '/img/6.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[6].src = '/img/7.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[7].src = '/img/8.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[8].src = '/img/9.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[9].src = '/img/10.png';\r\n        this.boomImages.push(new Image());\r\n        this.boomImages[10].src = '/img/11.png';\r\n\r\n        this.pills = [null];\r\n        this.pills.push(new Image());\r\n        this.pills[1].src = '/img/pill_1.png';\r\n        this.pills[1].onload = () => {\r\n            this.pills.push(new Image());\r\n            this.pills[2].src = '/img/pill_2.png';\r\n            this.pills[2].onload = () => {\r\n                this.pills.push(new Image());\r\n                this.pills[3].src = '/img/pill_5.png';\r\n                this.pills[3].onload = () => {\r\n                    this.pills.push(new Image());\r\n                    this.pills[4].src = '/img/pill_8.png';\r\n                    this.pills[4].onload = () => {\r\n                        this.pills.push(new Image());\r\n                        this.pills[5].src = '/img/pill_10.png';\r\n                        this.pills[5].onload = () => this.render();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.FIELD_SIZE; i++) {\r\n            this.field.push([]);\r\n            for (let j = 0; j < this.FIELD_SIZE; j++) {\r\n                this.field[i][j] = 1 + Math.floor(Math.random() * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    startTimeUpdate() {\r\n        if (this.interval) {\r\n            this.sec = 0;\r\n            clearInterval(this.interval);\r\n        }\r\n        this.interval = setInterval(() => {\r\n            this.sec++;\r\n            if (this.sec >= this.ROUND_TIME) { // закончить игру\r\n                clearInterval(this.interval);\r\n                this.callbacks.endGame(this.vaccineScore);\r\n                return;\r\n            }\r\n            this.callbacks.timeTick(this.ROUND_TIME - this.sec);\r\n        }, 1000);\r\n    }\r\n\r\n    move(i1, j1, i2, j2) {\r\n        if ((i1 === i2 && Math.abs(j1 - j2) === 1) ||\r\n            (Math.abs(i1 - i2) === 1 && j1 === j2)) {\r\n            let c = this.field[i1][j1];\r\n            this.field[i1][j1] = this.field[i2][j2];\r\n            this.field[i2][j2] = c;\r\n            if (this.firstStep) { // старт счетчика времени\r\n                this.firstStep = false;\r\n                this.startTimeUpdate();\r\n            }\r\n            this.render();\r\n            this.getStatus();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    clickCell(event) {\r\n        if (this.x >= 0 && this.y >= 0) {\r\n            let x = Math.floor(event.offsetX / this.SIZE);\r\n            let y = Math.floor(event.offsetY / this.SIZE);\r\n            this.move(this.x, this.y, x, y);\r\n            this.x = -1;\r\n            this.y = -1;\r\n        } else {\r\n            this.x = Math.floor(event.offsetX / this.SIZE);\r\n            this.y = Math.floor(event.offsetY / this.SIZE);\r\n        }\r\n    }\r\n\r\n    dropOneCell(i, j) {\r\n        if (j === 0) {\r\n            this.field[i][j] = 1 + Math.floor(Math.random() * 5);\r\n        } else {\r\n            for (let k = j; k >= 0; k--) {\r\n                if (this.field[i][k - 1] !== undefined) {\r\n                    this.field[i][k] = this.field[i][k - 1];\r\n                    this.field[i][k - 1] = 0;\r\n                } else {\r\n                    this.field[i][k] = 1 + Math.floor(Math.random() * 5)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    dropElements() {\r\n        for (let j = 0; j < this.FIELD_SIZE; j++) {\r\n            for (let i = 0; i < this.FIELD_SIZE; i++) {\r\n                if (this.field[i][j] === 0) {\r\n                    this.dropOneCell(i, j);\r\n                    this.render();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getStatus() {\r\n        let a1 = 0;\r\n        let a2 = 0;\r\n        for (let i = 0; i < this.FIELD_SIZE; i++) {\r\n            a1 = 0;\r\n            a2 = 0;\r\n            for (let j = 0; j < this.FIELD_SIZE; j++) {\r\n                if (a1 === a2 && a2 === this.field[i][j]) {\r\n                    this.field[i][j] = 0;\r\n                    this.field[i][j - 1] = 0;\r\n                    this.field[i][j - 2] = 0;\r\n                    this.booms.push({ i, j, currentImage: -1 });\r\n                    this.booms.push({ i, j: j - 1, currentImage: -1 });\r\n                    this.booms.push({ i, j: j - 2, currentImage: -1 });\r\n                    setTimeout(() => this.dropElements(), 1500);\r\n                    this.render();\r\n                    this.callbacks.addPills(3);\r\n                } else if (a1 === a2 && a2 !== this.field[i][j]) {\r\n                    a1 = this.field[i][j];\r\n                    a2 = 0;\r\n                } else if (a1 === this.field[i][j]) {\r\n                    a2 = this.field[i][j];\r\n                } else {\r\n                    a1 = this.field[i][j];\r\n                }\r\n            }\r\n        }\r\n        // пробежаться по строкам\r\n        for (let j = 0; j < this.FIELD_SIZE; j++) {\r\n            a1 = 0;\r\n            a2 = 0;\r\n            for (let i = 0; i < this.FIELD_SIZE; i++) {\r\n                console.log(a1,a2,this.field[i][j]);\r\n                if (a1 === a2 && a2 === this.field[i][j]) {\r\n                    this.field[i][j] = 0;\r\n                    this.field[i - 1][j] = 0;\r\n                    this.field[i - 2][j] = 0;\r\n                    this.booms.push({ i, j, currentImage: -1 });\r\n                    this.booms.push({ i: i - 1, j, currentImage: -1 });\r\n                    this.booms.push({ i: i - 2, j, currentImage: -1 });\r\n                    setTimeout(() => this.dropElements(), 1500);\r\n                    this.render();\r\n                    this.callbacks.addPills(3);\r\n                } else if (a1 === a2 && a2 !== this.field[i][j]) {\r\n                    a1 = this.field[i][j];\r\n                    a2 = 0;\r\n                } else if (a1 === this.field[i][j]) {\r\n                    a2 = this.field[i][j];\r\n                } else {\r\n                    a1 = this.field[i][j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    restartTime() {\r\n        this.startTimeUpdate();\r\n    }\r\n\r\n    isGameOver() { }\r\n\r\n    removeLines() { }\r\n\r\n    getNewLevel() {\r\n        /*this.count = 0;\r\n        if (this.pills >= 20) {\r\n           this.count += 1;\r\n        }\r\n        this.pills += 10;*/\r\n    }\r\n\r\n    clear() {\r\n        this.context.fillStyle = 'purple';\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    render() {\r\n        this.clear(); // очистка\r\n        // нарисовать пилюльки\r\n        for (let i = 0; i < this.field.length; i++) {\r\n            for (let j = 0; j < this.field.length; j++) {\r\n                if (this.field[i][j]) {\r\n                    this.context.drawImage(this.pills[this.field[i][j]], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\r\n                } else {\r\n                    this.context.fillRect(i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE)\r\n                }\r\n            }\r\n        }\r\n        // нарисовать бумсы\r\n        let refresh = false;\r\n        for (let i = this.booms.length - 1; i >= 0; i--) {\r\n            const boom = this.booms[i];\r\n            if (boom) {\r\n                boom.currentImage++;\r\n                if (boom.currentImage >= this.boomImages.length) {\r\n                    this.booms.splice(i, 1);\r\n                } else {\r\n                    const i = boom.i;\r\n                    const j = boom.j;\r\n                    this.context.drawImage(this.boomImages[boom.currentImage], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\r\n                    refresh = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (refresh) {\r\n            setTimeout(() => this.render(), 125);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameDrPill;"]},"metadata":{},"sourceType":"module"}