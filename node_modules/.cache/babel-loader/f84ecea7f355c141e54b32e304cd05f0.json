{"ast":null,"code":"class GameDrPill {\n  constructor({\n    id,\n    callbacks\n  }) {\n    this.canvas = document.getElementById(id);\n    this.context = this.canvas.getContext('2d');\n    this.canvas.width = 560;\n    this.canvas.height = 560;\n    this.canvas.addEventListener('click', event => this.clickCell(event));\n    this.ADD_PILLS = 10;\n    this.FIELD_SIZE = 8;\n    this.ROUND_TIME = 60; // sec\n\n    this.SIZE = 70;\n    this.callbacks = callbacks;\n    this.field = [];\n    this.sec = 0;\n    this.interval = null;\n    this.currentPills = 0;\n    this.requirePills = 20;\n    this.vaccineScore = 0;\n    this.firstStep = true;\n    this.pills = [null];\n    this.pills.push(new Image());\n    this.pills[1].src = '/img/pill_1.png';\n\n    this.pills[1].onload = () => {\n      this.pills.push(new Image());\n      this.pills[2].src = '/img/pill_2.png';\n\n      this.pills[2].onload = () => {\n        this.pills.push(new Image());\n        this.pills[3].src = '/img/pill_5.png';\n\n        this.pills[3].onload = () => {\n          this.pills.push(new Image());\n          this.pills[4].src = '/img/pill_8.png';\n\n          this.pills[4].onload = () => {\n            this.pills.push(new Image());\n            this.pills[5].src = '/img/pill_10.png';\n\n            this.pills[5].onload = () => this.render();\n          };\n        };\n      };\n    };\n\n    for (let i = 0; i < this.FIELD_SIZE; i++) {\n      this.field.push([]);\n\n      for (let j = 0; j < this.FIELD_SIZE; j++) {\n        this.field[i][j] = 1 + Math.floor(Math.random() * 5);\n      }\n    }\n  }\n\n  startTimeUpdate() {\n    this.interval = setInterval(() => {\n      this.sec++;\n\n      if (this.sec >= this.ROUND_TIME) {\n        // закончить игру\n        clearInterval(this.interval);\n        this.callbacks.endGame(this.vaccineScore);\n        return;\n      }\n\n      this.callbacks.timeTick(this.ROUND_TIME - this.sec);\n    }, 1000);\n  }\n\n  move(i1, j1, i2, j2) {\n    if (this.field[i1][j1] === 0 || this.field[i2][j2] === 0) {\n      if (i1 === i2 && Math.abs(j1 - j2) === 1 || Math.abs(i1 - i2) === 1 && j1 === j2) {\n        let c = this.field[i1][j1];\n        this.field[i1][j1] = this.field[i2][j2];\n        this.field[i2][j2] = c;\n\n        if (this.firstStep) {\n          // старт счетчика времени\n          this.firstStep = false;\n          this.startTimeUpdate();\n        }\n\n        this.render();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  clickCell(event) {\n    console.log(event.offsetX, event.offsetY);\n  }\n\n  getStatus() {}\n\n  isGameOver() {}\n\n  removeLines() {}\n\n  getNewLevel() {\n    /*this.count = 0;\r\n    if (this.pills >= 20) {\r\n       this.count += 1;\r\n    }\r\n    this.pills += 10;*/\n  }\n\n  clear() {\n    this.context.fillStyle = 'purple';\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  render() {\n    this.clear();\n\n    for (let i = 0; i < this.field.length; i++) {\n      for (let j = 0; j < this.field.length; j++) {\n        this.context.drawImage(this.pills[this.field[i][j]], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\n      }\n    }\n  }\n\n}\n\nexport default GameDrPill;","map":{"version":3,"sources":["D:/test/vs_studio/dr-pill/src/components/Game/GameDrPill.js"],"names":["GameDrPill","constructor","id","callbacks","canvas","document","getElementById","context","getContext","width","height","addEventListener","event","clickCell","ADD_PILLS","FIELD_SIZE","ROUND_TIME","SIZE","field","sec","interval","currentPills","requirePills","vaccineScore","firstStep","pills","push","Image","src","onload","render","i","j","Math","floor","random","startTimeUpdate","setInterval","clearInterval","endGame","timeTick","move","i1","j1","i2","j2","abs","c","console","log","offsetX","offsetY","getStatus","isGameOver","removeLines","getNewLevel","clear","fillStyle","fillRect","length","drawImage"],"mappings":"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","sourcesContent":["class GameDrPill {\r\n    constructor({ id, callbacks }) {\r\n        this.canvas = document.getElementById(id);\r\n        this.context = this.canvas.getContext('2d');\r\n        this.canvas.width = 560;\r\n        this.canvas.height = 560;\r\n        this.canvas.addEventListener('click', (event) => this.clickCell(event));\r\n\r\n        this.ADD_PILLS = 10;\r\n        this.FIELD_SIZE = 8;\r\n        this.ROUND_TIME = 60; // sec\r\n        this.SIZE = 70;\r\n\r\n        this.callbacks = callbacks;\r\n\r\n        this.field = [];\r\n        this.sec = 0;\r\n        this.interval = null;\r\n        this.currentPills = 0;\r\n        this.requirePills = 20;\r\n        this.vaccineScore = 0;\r\n        this.firstStep = true;\r\n\r\n        this.pills = [null];\r\n        this.pills.push(new Image());\r\n        this.pills[1].src = '/img/pill_1.png';\r\n        this.pills[1].onload = () => {\r\n            this.pills.push(new Image());\r\n            this.pills[2].src = '/img/pill_2.png';\r\n            this.pills[2].onload = () => {\r\n                this.pills.push(new Image());\r\n                this.pills[3].src = '/img/pill_5.png';\r\n                this.pills[3].onload = () => {\r\n                    this.pills.push(new Image());\r\n                    this.pills[4].src = '/img/pill_8.png';\r\n                    this.pills[4].onload = () => {\r\n                        this.pills.push(new Image());\r\n                        this.pills[5].src = '/img/pill_10.png';\r\n                        this.pills[5].onload = () => this.render();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        for (let i = 0; i < this.FIELD_SIZE; i++) {\r\n            this.field.push([]);\r\n            for (let j = 0; j < this.FIELD_SIZE; j++) {\r\n                this.field[i][j] = 1 + Math.floor(Math.random() * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    startTimeUpdate() {\r\n        this.interval = setInterval(() => {\r\n            this.sec++;\r\n            if (this.sec >= this.ROUND_TIME) { // закончить игру\r\n                clearInterval(this.interval);\r\n                this.callbacks.endGame(this.vaccineScore);\r\n                return;\r\n            }\r\n            this.callbacks.timeTick(this.ROUND_TIME - this.sec);\r\n        }, 1000);\r\n    }\r\n\r\n    move(i1, j1, i2, j2) {\r\n        if (this.field[i1][j1] === 0 || this.field[i2][j2] === 0) {\r\n            if ((i1 === i2 && Math.abs(j1 - j2) === 1) || \r\n                (Math.abs(i1 - i2) === 1 && j1 === j2)\r\n            ) {\r\n                let c = this.field[i1][j1];\r\n                this.field[i1][j1] = this.field[i2][j2];\r\n                this.field[i2][j2] = c;\r\n                if (this.firstStep) { // старт счетчика времени\r\n                    this.firstStep = false;\r\n                    this.startTimeUpdate();\r\n                }\r\n                this.render();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clickCell(event) {\r\n        console.log(event.offsetX, event.offsetY)\r\n\r\n    }\r\n\r\n    getStatus() {}\r\n\r\n    isGameOver() {}\r\n\r\n    removeLines() {}\r\n\r\n    getNewLevel() {\r\n        /*this.count = 0;\r\n        if (this.pills >= 20) {\r\n           this.count += 1;\r\n        }\r\n        this.pills += 10;*/\r\n    }\r\n\r\n    clear() {\r\n        this.context.fillStyle = 'purple';\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        for (let i = 0; i < this.field.length; i++) {\r\n            for (let j = 0; j < this.field.length; j++) {\r\n                this.context.drawImage(this.pills[this.field[i][j]], i * this.SIZE, j * this.SIZE, this.SIZE, this.SIZE);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameDrPill;"]},"metadata":{},"sourceType":"module"}